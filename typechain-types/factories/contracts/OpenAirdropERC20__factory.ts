/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  OpenAirdropERC20,
  OpenAirdropERC20Interface,
} from "../../contracts/OpenAirdropERC20";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "airdropName",
        type: "string",
      },
      {
        internalType: "address",
        name: "initialOwner",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "totalAirdropAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "claimAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expirationDate",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "allowedAddress",
        type: "address",
      },
    ],
    name: "AddressAllowed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "disallowedAddress",
        type: "address",
      },
    ],
    name: "AddressDisallowed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Claim",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "proof",
        type: "bytes32[]",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAirdropAmountLeft",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAirdropInfo",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "airdropName",
            type: "string",
          },
          {
            internalType: "address",
            name: "airdropAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "totalAirdropAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "airdropAmountLeft",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "claimAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expirationDate",
            type: "uint256",
          },
          {
            internalType: "enum AirdropType",
            name: "airdropType",
            type: "uint8",
          },
        ],
        internalType: "struct AirdropInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getClaimAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getExpirationDate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTokenUri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalAirdropAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hasBalanceToClaim",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hasBeenTotallyClaimed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "hasClaimed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hasExpired",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "isAllowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001d9338038062001d9383398181016040528101906200003791906200045f565b84600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000ad5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000a491906200052b565b60405180910390fd5b620000be816200016860201b60201c565b5083600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550856006908162000111919062000789565b50826002819055508260038190555081600481905550806005819055506000600760006101000a81548160ff0219169083600181111562000157576200015662000870565b5b02179055505050505050506200089f565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b62000295826200024a565b810181811067ffffffffffffffff82111715620002b757620002b66200025b565b5b80604052505050565b6000620002cc6200022c565b9050620002da82826200028a565b919050565b600067ffffffffffffffff821115620002fd57620002fc6200025b565b5b62000308826200024a565b9050602081019050919050565b60005b838110156200033557808201518184015260208101905062000318565b60008484015250505050565b6000620003586200035284620002df565b620002c0565b90508281526020810184848401111562000377576200037662000245565b5b6200038484828562000315565b509392505050565b600082601f830112620003a457620003a362000240565b5b8151620003b684826020860162000341565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620003ec82620003bf565b9050919050565b620003fe81620003df565b81146200040a57600080fd5b50565b6000815190506200041e81620003f3565b92915050565b6000819050919050565b620004398162000424565b81146200044557600080fd5b50565b60008151905062000459816200042e565b92915050565b60008060008060008060c087890312156200047f576200047e62000236565b5b600087015167ffffffffffffffff811115620004a0576200049f6200023b565b5b620004ae89828a016200038c565b9650506020620004c189828a016200040d565b9550506040620004d489828a016200040d565b9450506060620004e789828a0162000448565b9350506080620004fa89828a0162000448565b92505060a06200050d89828a0162000448565b9150509295509295509295565b6200052581620003df565b82525050565b60006020820190506200054260008301846200051a565b92915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200059b57607f821691505b602082108103620005b157620005b062000553565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026200061b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620005dc565b620006278683620005dc565b95508019841693508086168417925050509392505050565b6000819050919050565b60006200066a620006646200065e8462000424565b6200063f565b62000424565b9050919050565b6000819050919050565b620006868362000649565b6200069e620006958262000671565b848454620005e9565b825550505050565b600090565b620006b5620006a6565b620006c28184846200067b565b505050565b5b81811015620006ea57620006de600082620006ab565b600181019050620006c8565b5050565b601f82111562000739576200070381620005b7565b6200070e84620005cc565b810160208510156200071e578190505b620007366200072d85620005cc565b830182620006c7565b50505b505050565b600082821c905092915050565b60006200075e600019846008026200073e565b1980831691505092915050565b60006200077983836200074b565b9150826002028217905092915050565b620007948262000548565b67ffffffffffffffff811115620007b057620007af6200025b565b5b620007bc825462000582565b620007c9828285620006ee565b600060209050601f831160018114620008015760008415620007ec578287015190505b620007f885826200076b565b86555062000868565b601f1984166200081186620005b7565b60005b828110156200083b5784890151825560018201915060208501945060208101905062000814565b868310156200085b578489015162000857601f8916826200074b565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6114e480620008af6000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806373b2e80e11610097578063babcc53911610066578063babcc53914610269578063c395c8af14610299578063cd61a609146102b7578063f2fde38b146102d557610100565b806373b2e80e146101df5780638da5cb5b1461020f57806390e64d131461022d5780639592a2cd1461024b57610100565b806343f367c8116100d357806343f367c81461017b5780635edf7d8b1461019957806371127ed2146101b7578063715018a6146101d557610100565b806301cb54c01461010557806312065fe01461012357806332f08873146101415780633d13f8741461015f575b600080fd5b61010d6102f1565b60405161011a9190610b88565b60405180910390f35b61012b610399565b6040516101389190610bbc565b60405180910390f35b61014961043c565b6040516101569190610dca565b60405180910390f35b61017960048036038101906101749190610ebd565b610545565b005b6101836107b2565b6040516101909190610bbc565b60405180910390f35b6101a16107bc565b6040516101ae9190610bbc565b60405180910390f35b6101bf6107c6565b6040516101cc9190610bbc565b60405180910390f35b6101dd6107d0565b005b6101f960048036038101906101f49190610f31565b6107e4565b6040516102069190610b88565b60405180910390f35b61021761083a565b6040516102249190610f6d565b60405180910390f35b610235610863565b6040516102429190610b88565b60405180910390f35b61025361086f565b6040516102609190610b88565b60405180910390f35b610283600480360381019061027e9190610f31565b61087d565b6040516102909190610b88565b60405180910390f35b6102a1610888565b6040516102ae9190610fd2565b60405180910390f35b6102bf610925565b6040516102cc9190610bbc565b60405180910390f35b6102ef60048036038101906102ea9190610f31565b61092f565b005b6000600454600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016103519190610f6d565b602060405180830381865afa15801561036e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103929190611009565b1015905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016103f69190610f6d565b602060405180830381865afa158015610413573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104379190611009565b905090565b610444610b08565b6040518060e001604052806006805461045c90611065565b80601f016020809104026020016040519081016040528092919081815260200182805461048890611065565b80156104d55780601f106104aa576101008083540402835291602001916104d5565b820191906000526020600020905b8154815290600101906020018083116104b857829003601f168201915b505050505081526020013073ffffffffffffffffffffffffffffffffffffffff1681526020016002548152602001600354815260200160045481526020016005548152602001600760009054906101000a900460ff16600181111561053d5761053c610cb7565b5b815250905090565b61054d6109b5565b610555610863565b15610595576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058c906110e2565b60405180910390fd5b61059e846107e4565b156105de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d590611174565b60405180910390fd5b6105e661086f565b15610626576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161061d90611206565b60405180910390fd5b61062e6102f1565b61066d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066490611298565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb856004546040518363ffffffff1660e01b81526004016106cc9291906112b8565b600060405180830381600087803b1580156106e657600080fd5b505af11580156106fa573d6000803e3d6000fd5b50505050600454600360008282546107129190611310565b925050819055506001600960008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507f47cee97cb7acd717b3c0aa1435d004cd5b3c8c57d70dbceb4e4458bbd60e39d4846004546040516107a49291906112b8565b60405180910390a150505050565b6000600254905090565b6000600554905090565b6000600454905090565b6107d86109b5565b6107e26000610a3c565b565b6000600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60004260055410905090565b600060045460035410905090565b600060019050919050565b6060600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634e16fc8b6040518163ffffffff1660e01b8152600401600060405180830381865afa1580156108f7573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906109209190611465565b905090565b6000600354905090565b6109376109b5565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036109a95760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016109a09190610f6d565b60405180910390fd5b6109b281610a3c565b50565b6109bd610b00565b73ffffffffffffffffffffffffffffffffffffffff166109db61083a565b73ffffffffffffffffffffffffffffffffffffffff1614610a3a576109fe610b00565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610a319190610f6d565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6040518060e0016040528060608152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600081526020016000815260200160006001811115610b6757610b66610cb7565b5b81525090565b60008115159050919050565b610b8281610b6d565b82525050565b6000602082019050610b9d6000830184610b79565b92915050565b6000819050919050565b610bb681610ba3565b82525050565b6000602082019050610bd16000830184610bad565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610c11578082015181840152602081019050610bf6565b60008484015250505050565b6000601f19601f8301169050919050565b6000610c3982610bd7565b610c438185610be2565b9350610c53818560208601610bf3565b610c5c81610c1d565b840191505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610c9282610c67565b9050919050565b610ca281610c87565b82525050565b610cb181610ba3565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60028110610cf757610cf6610cb7565b5b50565b6000819050610d0882610ce6565b919050565b6000610d1882610cfa565b9050919050565b610d2881610d0d565b82525050565b600060e0830160008301518482036000860152610d4b8282610c2e565b9150506020830151610d606020860182610c99565b506040830151610d736040860182610ca8565b506060830151610d866060860182610ca8565b506080830151610d996080860182610ca8565b5060a0830151610dac60a0860182610ca8565b5060c0830151610dbf60c0860182610d1f565b508091505092915050565b60006020820190508181036000830152610de48184610d2e565b905092915050565b6000604051905090565b600080fd5b600080fd5b610e0981610c87565b8114610e1457600080fd5b50565b600081359050610e2681610e00565b92915050565b610e3581610ba3565b8114610e4057600080fd5b50565b600081359050610e5281610e2c565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112610e7d57610e7c610e58565b5b8235905067ffffffffffffffff811115610e9a57610e99610e5d565b5b602083019150836020820283011115610eb657610eb5610e62565b5b9250929050565b60008060008060608587031215610ed757610ed6610df6565b5b6000610ee587828801610e17565b9450506020610ef687828801610e43565b935050604085013567ffffffffffffffff811115610f1757610f16610dfb565b5b610f2387828801610e67565b925092505092959194509250565b600060208284031215610f4757610f46610df6565b5b6000610f5584828501610e17565b91505092915050565b610f6781610c87565b82525050565b6000602082019050610f826000830184610f5e565b92915050565b600082825260208201905092915050565b6000610fa482610bd7565b610fae8185610f88565b9350610fbe818560208601610bf3565b610fc781610c1d565b840191505092915050565b60006020820190508181036000830152610fec8184610f99565b905092915050565b60008151905061100381610e2c565b92915050565b60006020828403121561101f5761101e610df6565b5b600061102d84828501610ff4565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061107d57607f821691505b6020821081036110905761108f611036565b5b50919050565b7f41697264726f7020616c726561647920657870697265642e0000000000000000600082015250565b60006110cc601883610f88565b91506110d782611096565b602082019050919050565b600060208201905081810360008301526110fb816110bf565b9050919050565b7f4164647265737320616c726561647920636c61696d656420746869732061697260008201527f64726f702e000000000000000000000000000000000000000000000000000000602082015250565b600061115e602583610f88565b915061116982611102565b604082019050919050565b6000602082019050818103600083015261118d81611151565b9050919050565b7f41697264726f7020686173206265656e20746f74616c6c7920636c61696d656460008201527f20616c72656164792e0000000000000000000000000000000000000000000000602082015250565b60006111f0602983610f88565b91506111fb82611194565b604082019050919050565b6000602082019050818103600083015261121f816111e3565b9050919050565b7f41697264726f7020636f6e74726163742068617320696e73756666696369656e60008201527f7420746f6b656e2062616c616e63652e00000000000000000000000000000000602082015250565b6000611282603083610f88565b915061128d82611226565b604082019050919050565b600060208201905081810360008301526112b181611275565b9050919050565b60006040820190506112cd6000830185610f5e565b6112da6020830184610bad565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061131b82610ba3565b915061132683610ba3565b925082820390508181111561133e5761133d6112e1565b5b92915050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61138182610c1d565b810181811067ffffffffffffffff821117156113a05761139f611349565b5b80604052505050565b60006113b3610dec565b90506113bf8282611378565b919050565b600067ffffffffffffffff8211156113df576113de611349565b5b6113e882610c1d565b9050602081019050919050565b6000611408611403846113c4565b6113a9565b90508281526020810184848401111561142457611423611344565b5b61142f848285610bf3565b509392505050565b600082601f83011261144c5761144b610e58565b5b815161145c8482602086016113f5565b91505092915050565b60006020828403121561147b5761147a610df6565b5b600082015167ffffffffffffffff81111561149957611498610dfb565b5b6114a584828501611437565b9150509291505056fea2646970667358221220ccfe8b64ddac44d6febcfa2d0b54181c5d662638caa65ad297eb46b6bb7dc44664736f6c63430008140033";

type OpenAirdropERC20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OpenAirdropERC20ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OpenAirdropERC20__factory extends ContractFactory {
  constructor(...args: OpenAirdropERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    airdropName: string,
    initialOwner: AddressLike,
    tokenAddress: AddressLike,
    totalAirdropAmount: BigNumberish,
    claimAmount: BigNumberish,
    expirationDate: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      airdropName,
      initialOwner,
      tokenAddress,
      totalAirdropAmount,
      claimAmount,
      expirationDate,
      overrides || {}
    );
  }
  override deploy(
    airdropName: string,
    initialOwner: AddressLike,
    tokenAddress: AddressLike,
    totalAirdropAmount: BigNumberish,
    claimAmount: BigNumberish,
    expirationDate: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      airdropName,
      initialOwner,
      tokenAddress,
      totalAirdropAmount,
      claimAmount,
      expirationDate,
      overrides || {}
    ) as Promise<
      OpenAirdropERC20 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): OpenAirdropERC20__factory {
    return super.connect(runner) as OpenAirdropERC20__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OpenAirdropERC20Interface {
    return new Interface(_abi) as OpenAirdropERC20Interface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): OpenAirdropERC20 {
    return new Contract(address, _abi, runner) as unknown as OpenAirdropERC20;
  }
}
