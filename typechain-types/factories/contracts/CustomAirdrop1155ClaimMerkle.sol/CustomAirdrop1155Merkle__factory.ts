/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  CustomAirdrop1155Merkle,
  CustomAirdrop1155MerkleInterface,
} from "../../../contracts/CustomAirdrop1155ClaimMerkle.sol/CustomAirdrop1155Merkle";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "airdropName",
        type: "string",
      },
      {
        internalType: "address",
        name: "initialOwner",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalAirdropAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expirationDate",
        type: "uint256",
      },
      {
        internalType: "enum AirdropType",
        name: "airdropType",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidProof",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "UsedLeaf",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Claim",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "proof",
        type: "bytes32[]",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "claimedLeaf",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAirdropAmountLeft",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAirdropInfo",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "airdropName",
            type: "string",
          },
          {
            internalType: "address",
            name: "airdropAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "totalAirdropAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "airdropAmountLeft",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "claimAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expirationDate",
            type: "uint256",
          },
          {
            internalType: "enum AirdropType",
            name: "airdropType",
            type: "uint8",
          },
        ],
        internalType: "struct AirdropInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getExpirationDate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalAirdropAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hasBeenTotallyClaimed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "hasClaimed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hasExpired",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "root",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    name: "setRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001f5738038062001f57833981810160405281019062000037919062000487565b85600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000ad5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000a491906200056a565b60405180910390fd5b620000be816200016860201b60201c565b5084600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508660079081620001119190620007c8565b508360068190555082600281905550826003819055508160058190555080600860006101000a81548160ff02191690836001811115620001565762000155620008af565b5b021790555050505050505050620008de565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b62000295826200024a565b810181811067ffffffffffffffff82111715620002b757620002b66200025b565b5b80604052505050565b6000620002cc6200022c565b9050620002da82826200028a565b919050565b600067ffffffffffffffff821115620002fd57620002fc6200025b565b5b62000308826200024a565b9050602081019050919050565b60005b838110156200033557808201518184015260208101905062000318565b60008484015250505050565b6000620003586200035284620002df565b620002c0565b90508281526020810184848401111562000377576200037662000245565b5b6200038484828562000315565b509392505050565b600082601f830112620003a457620003a362000240565b5b8151620003b684826020860162000341565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620003ec82620003bf565b9050919050565b620003fe81620003df565b81146200040a57600080fd5b50565b6000815190506200041e81620003f3565b92915050565b6000819050919050565b620004398162000424565b81146200044557600080fd5b50565b60008151905062000459816200042e565b92915050565b600281106200046d57600080fd5b50565b60008151905062000481816200045f565b92915050565b600080600080600080600060e0888a031215620004a957620004a862000236565b5b600088015167ffffffffffffffff811115620004ca57620004c96200023b565b5b620004d88a828b016200038c565b9750506020620004eb8a828b016200040d565b9650506040620004fe8a828b016200040d565b9550506060620005118a828b0162000448565b9450506080620005248a828b0162000448565b93505060a0620005378a828b0162000448565b92505060c06200054a8a828b0162000470565b91505092959891949750929550565b6200056481620003df565b82525050565b600060208201905062000581600083018462000559565b92915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620005da57607f821691505b602082108103620005f057620005ef62000592565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026200065a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200061b565b6200066686836200061b565b95508019841693508086168417925050509392505050565b6000819050919050565b6000620006a9620006a36200069d8462000424565b6200067e565b62000424565b9050919050565b6000819050919050565b620006c58362000688565b620006dd620006d482620006b0565b84845462000628565b825550505050565b600090565b620006f4620006e5565b62000701818484620006ba565b505050565b5b8181101562000729576200071d600082620006ea565b60018101905062000707565b5050565b601f82111562000778576200074281620005f6565b6200074d846200060b565b810160208510156200075d578190505b620007756200076c856200060b565b83018262000706565b50505b505050565b600082821c905092915050565b60006200079d600019846008026200077d565b1980831691505092915050565b6000620007b883836200078a565b9150826002028217905092915050565b620007d38262000587565b67ffffffffffffffff811115620007ef57620007ee6200025b565b5b620007fb8254620005c1565b620008088282856200072d565b600060209050601f8311600181146200084057600084156200082b578287015190505b620008378582620007aa565b865550620008a7565b601f1984166200085086620005f6565b60005b828110156200087a5784890151825560018201915060208501945060208101905062000853565b868310156200089a578489015162000896601f8916826200078a565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b61166980620008ee6000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80638da5cb5b11610097578063dab5f34011610066578063dab5f3401461027b578063ebf0c71714610297578063f23a6e61146102b5578063f2fde38b146102e557610100565b80638da5cb5b1461020357806390e64d13146102215780639592a2cd1461023f578063cd61a6091461025d57610100565b80635edf7d8b116100d35780635edf7d8b1461017b578063715018a61461019957806373b2e80e146101a357806380bdc421146101d357610100565b806312065fe01461010557806332f08873146101235780633d13f8741461014157806343f367c81461015d575b600080fd5b61010d610301565b60405161011a9190610c08565b60405180910390f35b61012b6103a7565b6040516101389190610e16565b60405180910390f35b61015b60048036038101906101569190610f09565b6104af565b005b6101656104c9565b6040516101729190610c08565b60405180910390f35b6101836104d3565b6040516101909190610c08565b60405180910390f35b6101a16104dd565b005b6101bd60048036038101906101b89190610f7d565b6104f1565b6040516101ca9190610fc5565b60405180910390f35b6101ed60048036038101906101e89190611016565b610547565b6040516101fa9190610fc5565b60405180910390f35b61020b610567565b6040516102189190611052565b60405180910390f35b610229610590565b6040516102369190610fc5565b60405180910390f35b61024761059c565b6040516102549190610fc5565b60405180910390f35b6102656105a9565b6040516102729190610c08565b60405180910390f35b61029560048036038101906102909190611016565b6105b3565b005b61029f6105c5565b6040516102ac919061107c565b60405180910390f35b6102cf60048036038101906102ca91906111c7565b6105cb565b6040516102dc9190611299565b60405180910390f35b6102ff60048036038101906102fa9190610f7d565b6105f9565b005b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1662fdd58e306006546040518363ffffffff1660e01b81526004016103619291906112b4565b602060405180830381865afa15801561037e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103a291906112f2565b905090565b6103af610b8a565b6040518060e00160405280600780546103c79061134e565b80601f01602080910402602001604051908101604052809291908181526020018280546103f39061134e565b80156104405780601f1061041557610100808354040283529160200191610440565b820191906000526020600020905b81548152906001019060200180831161042357829003601f168201915b505050505081526020013073ffffffffffffffffffffffffffffffffffffffff16815260200160025481526020016003548152602001600081526020016005548152602001600860009054906101000a900460ff1660018111156104a7576104a6610d03565b5b815250905090565b6104b761067f565b6104c384848484610706565b50505050565b6000600254905090565b6000600554905090565b6104e561067f565b6104ef60006109b2565b565b6000600a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b600b6020528060005260406000206000915054906101000a900460ff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60004260055410905090565b6000600160035410905090565b6000600354905090565b6105bb61067f565b8060098190555050565b60095481565b60007ff23a6e612e1ff4830e658fe43f4e3cb4a5f8170bd5d9e69fb5d7a7fa9e4fdf97905095945050505050565b61060161067f565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036106735760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161066a9190611052565b60405180910390fd5b61067c816109b2565b50565b610687610a76565b73ffffffffffffffffffffffffffffffffffffffff166106a5610567565b73ffffffffffffffffffffffffffffffffffffffff1614610704576106c8610a76565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016106fb9190611052565b60405180910390fd5b565b60006107128585610a7e565b9050610722838360095484610ad7565b610758576040517f09bde33900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600b600082815260200190815260200160002060009054906101000a900460ff16156107b0576040517fc0ab2c9f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600b600083815260200190815260200160002060006101000a81548160ff0219169083151502179055506107e4610590565b15610824576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081b906113dc565b60405180910390fd5b61082c61059c565b1561086c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108639061146e565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f242432a3087600654886040518563ffffffff1660e01b81526004016108cf94939291906114c5565b600060405180830381600087803b1580156108e957600080fd5b505af11580156108fd573d6000803e3d6000fd5b505050508360036000828254610913919061154c565b925050819055506001600a60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507f47cee97cb7acd717b3c0aa1435d004cd5b3c8c57d70dbceb4e4458bbd60e39d485856040516109a39291906112b4565b60405180910390a15050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b60008282604051602001610a939291906112b4565b60405160208183030381529060405280519060200120604051602001610ab991906115a1565b60405160208183030381529060405280519060200120905092915050565b600082610ae5868685610af0565b149050949350505050565b60008082905060005b85859050811015610b3c57610b2782878784818110610b1b57610b1a6115bc565b5b90506020020135610b48565b91508080610b34906115eb565b915050610af9565b50809150509392505050565b6000818310610b6057610b5b8284610b73565b610b6b565b610b6a8383610b73565b5b905092915050565b600082600052816020526040600020905092915050565b6040518060e0016040528060608152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600081526020016000815260200160006001811115610be957610be8610d03565b5b81525090565b6000819050919050565b610c0281610bef565b82525050565b6000602082019050610c1d6000830184610bf9565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610c5d578082015181840152602081019050610c42565b60008484015250505050565b6000601f19601f8301169050919050565b6000610c8582610c23565b610c8f8185610c2e565b9350610c9f818560208601610c3f565b610ca881610c69565b840191505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610cde82610cb3565b9050919050565b610cee81610cd3565b82525050565b610cfd81610bef565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60028110610d4357610d42610d03565b5b50565b6000819050610d5482610d32565b919050565b6000610d6482610d46565b9050919050565b610d7481610d59565b82525050565b600060e0830160008301518482036000860152610d978282610c7a565b9150506020830151610dac6020860182610ce5565b506040830151610dbf6040860182610cf4565b506060830151610dd26060860182610cf4565b506080830151610de56080860182610cf4565b5060a0830151610df860a0860182610cf4565b5060c0830151610e0b60c0860182610d6b565b508091505092915050565b60006020820190508181036000830152610e308184610d7a565b905092915050565b6000604051905090565b600080fd5b600080fd5b610e5581610cd3565b8114610e6057600080fd5b50565b600081359050610e7281610e4c565b92915050565b610e8181610bef565b8114610e8c57600080fd5b50565b600081359050610e9e81610e78565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112610ec957610ec8610ea4565b5b8235905067ffffffffffffffff811115610ee657610ee5610ea9565b5b602083019150836020820283011115610f0257610f01610eae565b5b9250929050565b60008060008060608587031215610f2357610f22610e42565b5b6000610f3187828801610e63565b9450506020610f4287828801610e8f565b935050604085013567ffffffffffffffff811115610f6357610f62610e47565b5b610f6f87828801610eb3565b925092505092959194509250565b600060208284031215610f9357610f92610e42565b5b6000610fa184828501610e63565b91505092915050565b60008115159050919050565b610fbf81610faa565b82525050565b6000602082019050610fda6000830184610fb6565b92915050565b6000819050919050565b610ff381610fe0565b8114610ffe57600080fd5b50565b60008135905061101081610fea565b92915050565b60006020828403121561102c5761102b610e42565b5b600061103a84828501611001565b91505092915050565b61104c81610cd3565b82525050565b60006020820190506110676000830184611043565b92915050565b61107681610fe0565b82525050565b6000602082019050611091600083018461106d565b92915050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6110d482610c69565b810181811067ffffffffffffffff821117156110f3576110f261109c565b5b80604052505050565b6000611106610e38565b905061111282826110cb565b919050565b600067ffffffffffffffff8211156111325761113161109c565b5b61113b82610c69565b9050602081019050919050565b82818337600083830152505050565b600061116a61116584611117565b6110fc565b90508281526020810184848401111561118657611185611097565b5b611191848285611148565b509392505050565b600082601f8301126111ae576111ad610ea4565b5b81356111be848260208601611157565b91505092915050565b600080600080600060a086880312156111e3576111e2610e42565b5b60006111f188828901610e63565b955050602061120288828901610e63565b945050604061121388828901610e8f565b935050606061122488828901610e8f565b925050608086013567ffffffffffffffff81111561124557611244610e47565b5b61125188828901611199565b9150509295509295909350565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6112938161125e565b82525050565b60006020820190506112ae600083018461128a565b92915050565b60006040820190506112c96000830185611043565b6112d66020830184610bf9565b9392505050565b6000815190506112ec81610e78565b92915050565b60006020828403121561130857611307610e42565b5b6000611316848285016112dd565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061136657607f821691505b6020821081036113795761137861131f565b5b50919050565b600082825260208201905092915050565b7f41697264726f7020616c726561647920657870697265642e0000000000000000600082015250565b60006113c660188361137f565b91506113d182611390565b602082019050919050565b600060208201905081810360008301526113f5816113b9565b9050919050565b7f41697264726f7020686173206265656e20746f74616c6c7920636c61696d656460008201527f20616c72656164792e0000000000000000000000000000000000000000000000602082015250565b600061145860298361137f565b9150611463826113fc565b604082019050919050565b600060208201905081810360008301526114878161144b565b9050919050565b600082825260208201905092915050565b50565b60006114af60008361148e565b91506114ba8261149f565b600082019050919050565b600060a0820190506114da6000830187611043565b6114e76020830186611043565b6114f46040830185610bf9565b6115016060830184610bf9565b8181036080830152611512816114a2565b905095945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061155782610bef565b915061156283610bef565b925082820390508181111561157a5761157961151d565b5b92915050565b6000819050919050565b61159b61159682610fe0565b611580565b82525050565b60006115ad828461158a565b60208201915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006115f682610bef565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036116285761162761151d565b5b60018201905091905056fea2646970667358221220432a154bfb0c9df660fd40cd33474fb30e8699c60d0abe14e396741e25bb7f9664736f6c63430008140033";

type CustomAirdrop1155MerkleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CustomAirdrop1155MerkleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CustomAirdrop1155Merkle__factory extends ContractFactory {
  constructor(...args: CustomAirdrop1155MerkleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    airdropName: string,
    initialOwner: AddressLike,
    tokenAddress: AddressLike,
    tokenId: BigNumberish,
    totalAirdropAmount: BigNumberish,
    expirationDate: BigNumberish,
    airdropType: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      airdropName,
      initialOwner,
      tokenAddress,
      tokenId,
      totalAirdropAmount,
      expirationDate,
      airdropType,
      overrides || {}
    );
  }
  override deploy(
    airdropName: string,
    initialOwner: AddressLike,
    tokenAddress: AddressLike,
    tokenId: BigNumberish,
    totalAirdropAmount: BigNumberish,
    expirationDate: BigNumberish,
    airdropType: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      airdropName,
      initialOwner,
      tokenAddress,
      tokenId,
      totalAirdropAmount,
      expirationDate,
      airdropType,
      overrides || {}
    ) as Promise<
      CustomAirdrop1155Merkle & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): CustomAirdrop1155Merkle__factory {
    return super.connect(runner) as CustomAirdrop1155Merkle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CustomAirdrop1155MerkleInterface {
    return new Interface(_abi) as CustomAirdrop1155MerkleInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): CustomAirdrop1155Merkle {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as CustomAirdrop1155Merkle;
  }
}
