/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  CustomAirdrop1155,
  CustomAirdrop1155Interface,
} from "../../../contracts/CustomAirdrop1155.sol/CustomAirdrop1155";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "initialOwner",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalAirdropAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "claimAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expirationDate",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "allowedAddress",
        type: "address",
      },
    ],
    name: "AddressAllowed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "disallowedAddress",
        type: "address",
      },
    ],
    name: "AddressDisallowed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Claim",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "allowAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "addresses",
        type: "address[]",
      },
    ],
    name: "allowAddresses",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "disallowAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "addresses",
        type: "address[]",
      },
    ],
    name: "disallowAddresses",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAirdropAmountLeft",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getClaimAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getExpirationDate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalAirdropAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hasBalanceToClaim",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hasBeenTotallyClaimed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "hasClaimed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hasExpired",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "isAllowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001a9d38038062001a9d833981810160405281019062000037919062000298565b85600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000ad5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000a4919062000345565b60405180910390fd5b620000be816200012f60201b60201c565b5084600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550836007819055508260038190555082600481905550816005819055508060068190555050505050505062000362565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200022582620001f8565b9050919050565b620002378162000218565b81146200024357600080fd5b50565b60008151905062000257816200022c565b92915050565b6000819050919050565b62000272816200025d565b81146200027e57600080fd5b50565b600081519050620002928162000267565b92915050565b60008060008060008060c08789031215620002b857620002b7620001f3565b5b6000620002c889828a0162000246565b9650506020620002db89828a0162000246565b9550506040620002ee89828a0162000281565b94505060606200030189828a0162000281565b93505060806200031489828a0162000281565b92505060a06200032789828a0162000281565b9150509295509295509295565b6200033f8162000218565b82525050565b60006020820190506200035c600083018462000334565b92915050565b61172b80620003726000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c806373b2e80e116100ad578063b7c58d7a11610071578063b7c58d7a146102c0578063babcc539146102dc578063cd61a6091461030c578063f23a6e611461032a578063f2fde38b1461035a57610121565b806373b2e80e1461021a5780638da5cb5b1461024a57806390e64d13146102685780639592a2cd14610286578063a9f7d0b2146102a457610121565b80633863b1f5116100f45780633863b1f51461019a57806343f367c8146101b65780635edf7d8b146101d457806371127ed2146101f2578063715018a61461021057610121565b806301cb54c01461012657806308af4d881461014457806312065fe0146101605780631e83409a1461017e575b600080fd5b61012e610376565b60405161013b9190610dd4565b60405180910390f35b61015e60048036038101906101599190610e61565b610421565b005b6101686104bb565b6040516101759190610ea7565b60405180910390f35b61019860048036038101906101939190610e61565b610561565b005b6101b460048036038101906101af919061101b565b610811565b005b6101be6108ff565b6040516101cb9190610ea7565b60405180910390f35b6101dc610909565b6040516101e99190610ea7565b60405180910390f35b6101fa610913565b6040516102079190610ea7565b60405180910390f35b61021861091d565b005b610234600480360381019061022f9190610e61565b610931565b6040516102419190610dd4565b60405180910390f35b610252610987565b60405161025f9190611073565b60405180910390f35b6102706109b0565b60405161027d9190610dd4565b60405180910390f35b61028e6109bc565b60405161029b9190610dd4565b60405180910390f35b6102be60048036038101906102b9919061101b565b6109ca565b005b6102da60048036038101906102d59190610e61565b610ab8565b005b6102f660048036038101906102f19190610e61565b610b52565b6040516103039190610dd4565b60405180910390f35b610314610ba8565b6040516103219190610ea7565b60405180910390f35b610344600480360381019061033f919061116f565b610bb2565b6040516103519190611241565b60405180910390f35b610374600480360381019061036f9190610e61565b610be0565b005b6000600554600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1662fdd58e306007546040518363ffffffff1660e01b81526004016103d992919061125c565b602060405180830381865afa1580156103f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061041a919061129a565b1015905090565b610429610c66565b6001600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507f5d20d7597e8195aa92d4ad63482761cfbbe7c4afdef190f27182702924c9af77816040516104b09190611073565b60405180910390a150565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1662fdd58e306007546040518363ffffffff1660e01b815260040161051b92919061125c565b602060405180830381865afa158015610538573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055c919061129a565b905090565b61056a81610b52565b6105a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105a09061134a565b60405180910390fd5b6105b16109b0565b156105f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e8906113b6565b60405180910390fd5b6105fa81610931565b1561063a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063190611448565b60405180910390fd5b6106426109bc565b15610682576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610679906114da565b60405180910390fd5b61068a610376565b6106c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106c09061156c565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f242432a30836007546005546040518563ffffffff1660e01b815260040161072e94939291906115c3565b600060405180830381600087803b15801561074857600080fd5b505af115801561075c573d6000803e3d6000fd5b5050505060055460046000828254610774919061164a565b925050819055506001600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507f47cee97cb7acd717b3c0aa1435d004cd5b3c8c57d70dbceb4e4458bbd60e39d48160055460405161080692919061125c565b60405180910390a150565b610819610c66565b60005b81518110156108fb5760016008600084848151811061083e5761083d61167e565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507f5d20d7597e8195aa92d4ad63482761cfbbe7c4afdef190f27182702924c9af778282815181106108cb576108ca61167e565b5b60200260200101516040516108e09190611073565b60405180910390a180806108f3906116ad565b91505061081c565b5050565b6000600354905090565b6000600654905090565b6000600554905090565b610925610c66565b61092f6000610ced565b565b6000600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60004260065410905090565b600060055460045410905090565b6109d2610c66565b60005b8151811015610ab4576000600860008484815181106109f7576109f661167e565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507f5f1b0fa787087c297cc2ee3a7641860058ab750c330ac3ea5d6d5b9b777f353d828281518110610a8457610a8361167e565b5b6020026020010151604051610a999190611073565b60405180910390a18080610aac906116ad565b9150506109d5565b5050565b610ac0610c66565b6000600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507f5f1b0fa787087c297cc2ee3a7641860058ab750c330ac3ea5d6d5b9b777f353d81604051610b479190611073565b60405180910390a150565b6000600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b6000600454905090565b60007ff23a6e612e1ff4830e658fe43f4e3cb4a5f8170bd5d9e69fb5d7a7fa9e4fdf97905095945050505050565b610be8610c66565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610c5a5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610c519190611073565b60405180910390fd5b610c6381610ced565b50565b610c6e610db1565b73ffffffffffffffffffffffffffffffffffffffff16610c8c610987565b73ffffffffffffffffffffffffffffffffffffffff1614610ceb57610caf610db1565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610ce29190611073565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b60008115159050919050565b610dce81610db9565b82525050565b6000602082019050610de96000830184610dc5565b92915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e2e82610e03565b9050919050565b610e3e81610e23565b8114610e4957600080fd5b50565b600081359050610e5b81610e35565b92915050565b600060208284031215610e7757610e76610df9565b5b6000610e8584828501610e4c565b91505092915050565b6000819050919050565b610ea181610e8e565b82525050565b6000602082019050610ebc6000830184610e98565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610f1082610ec7565b810181811067ffffffffffffffff82111715610f2f57610f2e610ed8565b5b80604052505050565b6000610f42610def565b9050610f4e8282610f07565b919050565b600067ffffffffffffffff821115610f6e57610f6d610ed8565b5b602082029050602081019050919050565b600080fd5b6000610f97610f9284610f53565b610f38565b90508083825260208201905060208402830185811115610fba57610fb9610f7f565b5b835b81811015610fe35780610fcf8882610e4c565b845260208401935050602081019050610fbc565b5050509392505050565b600082601f83011261100257611001610ec2565b5b8135611012848260208601610f84565b91505092915050565b60006020828403121561103157611030610df9565b5b600082013567ffffffffffffffff81111561104f5761104e610dfe565b5b61105b84828501610fed565b91505092915050565b61106d81610e23565b82525050565b60006020820190506110886000830184611064565b92915050565b61109781610e8e565b81146110a257600080fd5b50565b6000813590506110b48161108e565b92915050565b600080fd5b600067ffffffffffffffff8211156110da576110d9610ed8565b5b6110e382610ec7565b9050602081019050919050565b82818337600083830152505050565b600061111261110d846110bf565b610f38565b90508281526020810184848401111561112e5761112d6110ba565b5b6111398482856110f0565b509392505050565b600082601f83011261115657611155610ec2565b5b81356111668482602086016110ff565b91505092915050565b600080600080600060a0868803121561118b5761118a610df9565b5b600061119988828901610e4c565b95505060206111aa88828901610e4c565b94505060406111bb888289016110a5565b93505060606111cc888289016110a5565b925050608086013567ffffffffffffffff8111156111ed576111ec610dfe565b5b6111f988828901611141565b9150509295509295909350565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61123b81611206565b82525050565b60006020820190506112566000830184611232565b92915050565b60006040820190506112716000830185611064565b61127e6020830184610e98565b9392505050565b6000815190506112948161108e565b92915050565b6000602082840312156112b0576112af610df9565b5b60006112be84828501611285565b91505092915050565b600082825260208201905092915050565b7f41646472657373206e6f7420616c6c6f77656420746f20636c61696d2074686960008201527f732061697264726f700000000000000000000000000000000000000000000000602082015250565b60006113346029836112c7565b915061133f826112d8565b604082019050919050565b6000602082019050818103600083015261136381611327565b9050919050565b7f41697264726f7020616c726561647920657870697265642e0000000000000000600082015250565b60006113a06018836112c7565b91506113ab8261136a565b602082019050919050565b600060208201905081810360008301526113cf81611393565b9050919050565b7f4164647265737320616c726561647920636c61696d656420746869732061697260008201527f64726f702e000000000000000000000000000000000000000000000000000000602082015250565b60006114326025836112c7565b915061143d826113d6565b604082019050919050565b6000602082019050818103600083015261146181611425565b9050919050565b7f41697264726f7020686173206265656e20746f74616c6c7920636c61696d656460008201527f20616c72656164792e0000000000000000000000000000000000000000000000602082015250565b60006114c46029836112c7565b91506114cf82611468565b604082019050919050565b600060208201905081810360008301526114f3816114b7565b9050919050565b7f41697264726f7020636f6e74726163742068617320696e73756666696369656e60008201527f7420746f6b656e2062616c616e63652e00000000000000000000000000000000602082015250565b60006115566030836112c7565b9150611561826114fa565b604082019050919050565b6000602082019050818103600083015261158581611549565b9050919050565b600082825260208201905092915050565b50565b60006115ad60008361158c565b91506115b88261159d565b600082019050919050565b600060a0820190506115d86000830187611064565b6115e56020830186611064565b6115f26040830185610e98565b6115ff6060830184610e98565b8181036080830152611610816115a0565b905095945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061165582610e8e565b915061166083610e8e565b92508282039050818111156116785761167761161b565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006116b882610e8e565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036116ea576116e961161b565b5b60018201905091905056fea264697066735822122058662c79396a0c2a90c1068e2ee369193e28867f6989248ecbc309134453d79364736f6c63430008140033";

type CustomAirdrop1155ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CustomAirdrop1155ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CustomAirdrop1155__factory extends ContractFactory {
  constructor(...args: CustomAirdrop1155ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    initialOwner: AddressLike,
    tokenAddress: AddressLike,
    tokenId: BigNumberish,
    totalAirdropAmount: BigNumberish,
    claimAmount: BigNumberish,
    expirationDate: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      initialOwner,
      tokenAddress,
      tokenId,
      totalAirdropAmount,
      claimAmount,
      expirationDate,
      overrides || {}
    );
  }
  override deploy(
    initialOwner: AddressLike,
    tokenAddress: AddressLike,
    tokenId: BigNumberish,
    totalAirdropAmount: BigNumberish,
    claimAmount: BigNumberish,
    expirationDate: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      initialOwner,
      tokenAddress,
      tokenId,
      totalAirdropAmount,
      claimAmount,
      expirationDate,
      overrides || {}
    ) as Promise<
      CustomAirdrop1155 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): CustomAirdrop1155__factory {
    return super.connect(runner) as CustomAirdrop1155__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CustomAirdrop1155Interface {
    return new Interface(_abi) as CustomAirdrop1155Interface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): CustomAirdrop1155 {
    return new Contract(address, _abi, runner) as unknown as CustomAirdrop1155;
  }
}
